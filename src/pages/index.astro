---
import PG from "../components/PG.astro";
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import featuredLinks from "../libs/featuredLinks";
import Link from "../components/Link.astro";
import AdsLink from "../components/AdsLink.astro";
import Button from "../components/Button";
import nowData from "../libs/now.json";
import featuredBy from "../libs/featuredBy.json";
import latestBuild from "../libs/latestBuild.json";
import ideas from "../libs/ideas.json";
const greetings = [
  "Akwaaba!",
  "„Åì„Çì„Å´„Å°„ÅØ",
  "ÏïàÎÖïÌïòÏÑ∏Ïöî",
  "‰Ω†Â•Ω",
  "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!",
  "„ÅÑ„Çâ„Å£„Åó„ÇÉ„ÅÑ„Åæ„Åõ",
];

// Initialize with a random greeting
let randomGreeting = greetings[Math.floor(Math.random() * greetings.length)];
---

<Layout title="Akwaaba!">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-8">
    <Header />

    <h1 class="text-4xl sm:text-5xl md:text-6xl font-bold mb-4 leading-tight tracking-tight">
      <span class="text-xl sm:text-2xl text-[#333]">
        <style>
          #greeting {
            transition: opacity 0.5s ease;
          }
          #greeting.fade {
            opacity: 0;
          }
        </style>
        <span id="greeting">{randomGreeting}</span>
      </span>
      <br /> I'm <span class="text-indigo-600" style=" padding: 0 0.1em;">Gideon Appau</span> ‚Äî I craft products, write about the journey, and build with care.
    </h1>
    <div class="text-sm text-gray-500 mb-4">God ‚Ä¢ Product engineering, writing, design</div>
    <p
      class="text-base md:text-sm font-medium mb-4 text-gray-500 md:w-3/4"
      style="line-height: 2"
    >
      I'm exploring various creative avenues‚Äîchess, coding, music, poetry, and
      writing. Here you'll find honest stories about my work and a glimpse into
       <a href="projects">
        <span
          class="font-semibold text-orange-700"
          style="border-bottom: 1px dashed currentColor; padding: 0 0.2em;"
        >
          what I'm building üé¢
        </span></a
      >. Whether it's a new project or <a href="blog">
        <span
          class="font-semibold text-blue-700"
          style="border-bottom: 1px dashed currentColor; padding: 0 0.2em;"
        >
          a simple thought üìù
        </span></a>, I keep
      it real
      <a href="about">
        <span
          class="font-semibold text-green-700"
          style="border-bottom: 1px dashed currentColor; padding: 0 0.2em;"
        >
          about me üôà
        </span></a
      >
     . And if you‚Äôre up for a friendly chat or some idea sharing, join me on
      <a
        href="https://x.com/theaceslice"
        target="_blank"
        rel="noopener noreferrer"
        class="font-semibold text-black-600 hover:text-black-800 transition-colors duration-200"
        style="border-bottom: 1px dashed currentColor; padding: 0 0.2em;"
      >X (Twitter)</a>. 
    </p>

    <p
      class="italic text-sm md:text-sm font-medium text-gray-500 md:w-3/4 mb-8"
    >
      You can just call me
      <span
        class="text-indigo-600"
        style="border-bottom: 1px dashed currentColor; padding: 0 0.2em;"
      >
        Ace
      </span>
      ‚Äî a name that inspires me to live boldly and embrace mastery in every endeavor.
    </p>


    <PG />

    <section class="mt-2">
      <div class="rounded-xl border border-zinc-200 bg-white/50 backdrop-blur-2xl px-3 py-2 text-center text-[12px] text-gray-700">
        <span class="opacity-70">{nowData.label}:</span>
        {nowData.items.map((it, idx) => (
          <>
            <span class="px-1.5">{it}</span>
            {idx < nowData.items.length - 1 && <span class="opacity-40 px-1">‚Ä¢</span>}
          </>
        ))}
      </div>
    </section>

    {ideas && ideas.length > 0 && (
      <section class="mt-6">
        <div class="relative overflow-hidden rounded-2xl border border-zinc-200 bg-white/70 backdrop-blur-2xl p-4">
          <div class="pointer-events-none absolute -top-10 -left-10 w-36 h-36 rounded-full bg-indigo-200/30 blur-2xl"></div>
          <div class="pointer-events-none absolute -bottom-14 -right-14 w-40 h-40 rounded-full bg-amber-200/25 blur-2xl"></div>
          <div class="relative flex items-start justify-between gap-3">
            <div class="min-w-0">
              <div class="text-[11px] uppercase tracking-wide text-gray-600">Messy idea of the week</div>
              <div class="mt-1 flex items-center gap-2">
                <div class="text-sm font-semibold truncate">{ideas[0].title}</div>
                {ideas[0].status && (
                  <span class="px-2 py-0.5 rounded-full border border-zinc-300 bg-white/80 text-[10px] text-gray-700 whitespace-nowrap">{ideas[0].status}</span>
                )}
              </div>
              <p class="mt-1 text-sm text-gray-700 leading-relaxed line-clamp-2">{ideas[0].memo}</p>
            </div>
            <a href="/ideas" class="shrink-0 text-sm font-semibold underline decoration-dashed underline-offset-4 whitespace-nowrap">See ideas ‚Üí</a>
          </div>
        </div>
      </section>
    )}

    


    <section class="mt-10">
      <h2 class="mb-2 font-bold max-sm:mt-8">Featured</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-3 md:gap-4">
        {featuredLinks.map((item) => (
          <a
            href={item.link}
            target={String(item.link).startsWith("http") ? "_blank" : "_self"}
            rel={String(item.link).startsWith("http") ? "noopener noreferrer" : undefined}
            aria-label={`Open ${item.title}`}
            class="rounded-xl md:rounded-2xl border border-zinc-200 bg-white/50 backdrop-blur-2xl p-3 md:p-4 no-underline block relative transition-transform duration-200 hover:-translate-y-0.5 hover:border-zinc-300 hover:bg-white focus:outline-none focus:ring-2 focus:ring-indigo-300/40"
          >
            {item.tags && (() => {
              const lowerTags = item.tags.map((t) => String(t).toLowerCase());
              const isWip = lowerTags.includes("wip");
              const hasStartingSoon = lowerTags.includes("starting soon");
              const hasComingSoon = lowerTags.includes("coming soon");
              const isSoon = hasStartingSoon || hasComingSoon;
              const isBeta = lowerTags.includes("beta");
              const isPrivate = lowerTags.includes("private");
              const label = isWip
                ? "WIP"
                : isSoon
                ? (hasStartingSoon ? "Starting soon" : "Coming soon")
                : isBeta
                ? "Beta"
                : isPrivate
                ? "Private"
                : null;
              if (!label) return null;
              const cls = isWip
                ? "border-indigo-100 text-indigo-600 bg-indigo-50/60"
                : isSoon
                ? "border-orange-100 text-orange-600 bg-orange-50/60"
                : isBeta
                ? "border-cyan-100 text-cyan-600 bg-cyan-50/60"
                : "border-slate-100 text-slate-600 bg-slate-50/60";
              return (
                <div class={`absolute top-2 right-2 px-1.5 py-0.5 rounded-full border backdrop-blur-sm text-[10px] font-semibold ${cls}`}>
                  {label}
                </div>
              );
            })()}
            <div class="text-center">
              <div class="mb-2">
                <div class="mx-auto flex items-center justify-center w-10 h-10 md:w-12 md:h-12 rounded-lg border border-zinc-200 bg-white/80">
                  {item.logo ? (
                    <img
                      src={item.logo}
                      alt={`${item.title} logo`}
                      class="max-h-6 md:max-h-8 max-w-full object-contain opacity-90"
                      loading="lazy"
                    />
                  ) : (
                    item.icon && <div class={`${item.icon} text-lg md:text-xl opacity-80`} role="img" />
                  )}
                </div>
              </div>
              <h3 class="font-semibold leading-snug">{item.title}</h3>
              <p class="text-sm text-gray-600 mt-1 leading-relaxed">{item.description}</p>
              {item.tags && (
                <div class="mt-2 flex flex-wrap justify-center gap-2 text-[11px]">
                  {item.tags.map((t) => {
                    const tl = String(t).toLowerCase();
                    const isWip = tl === "wip";
                    const isSoon = tl === "starting soon" || tl === "coming soon";
                    const badgeClass = isWip
                      ? "border-violet-300 text-violet-700 bg-violet-50"
                      : isSoon
                      ? "border-amber-300 text-amber-700 bg-amber-50"
                      : "border-zinc-300 bg-white/70";
                    return (
                      <span class={`px-2 py-0.5 rounded-full border ${badgeClass}`}>{t}</span>
                    );
                  })}
                </div>
              )}
              {item.footer && <div class="text-xs mt-2 opacity-70">{item.footer}</div>}
            </div>
          </a>
        ))}
      </div>
      {latestBuild?.message && (
        <div class="mt-3 text-[12px] text-gray-700">
          <span class="opacity-60">Latest build:</span> {latestBuild.message}
        </div>
      )}
    </section>

    <div class="mt-10">
      <a href="/projects" class="inline-flex items-center gap-2 text-sm font-semibold underline decoration-dashed underline-offset-4">
        View all projects ‚Üí
      </a>
    </div>

    <section class="mt-12">
      <h2 class="mb-2 font-bold">Stack I use</h2>
      <div class="flex flex-wrap gap-2 text-xs">
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">Node.js</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">React</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">React Native</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">Astro</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">TypeScript</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">Tailwind</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">MongoDB</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">Postgres</span>
        <span class="px-2 py-1 rounded-full border border-zinc-300 bg-white/60">Figma</span>
      </div>
    </section>

    <section class="mt-10">
      <div class="rounded-2xl border border-zinc-200 bg-white/60 backdrop-blur-2xl p-5">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-3">
          <div class="md:w-4/5">
            <div class="text-[11px] uppercase tracking-wide text-gray-500">Latest note</div>
            <div class="mt-1 font-semibold text-sm md:text-base">Coming soon</div>
            <p class="mt-1 text-sm text-gray-600 leading-relaxed">No posts yet. I‚Äôll share small ideas and updates here.</p>
          </div>
          <a href="/blog" class="self-start md:self-auto inline-flex items-center gap-2 text-sm font-semibold underline decoration-dashed underline-offset-4">Read notes ‚Üí</a>
        </div>
      </div>
    </section>

    

    <section class="mt-10">
      <div class="rounded-2xl border border-zinc-200 bg-white/60 backdrop-blur-2xl p-4 text-center">
        <div class="text-[11px] uppercase tracking-wide text-gray-500 mb-2">As seen in</div>
        <div class="flex flex-wrap items-center justify-center gap-2">
          {featuredBy.map((item) => (
            <a href={item.url} target="_blank" rel="noopener noreferrer" class="px-2.5 py-1 rounded-full border border-zinc-200 bg-white/80 text-[11px] no-underline text-gray-700 hover:text-gray-900">
              {item.logo ? (
                <img src={item.logo} alt={`${item.name} logo`} class="h-4 object-contain" />
              ) : (
                <span>{item.name}</span>
              )}
            </a>
          ))}
        </div>
      </div>
    </section>

    <AdsLink
      backgroundColor="#582FFF"
      textColor="#fff"
      url="https://whispurr.netlify.app"
      description="‚Äî Whispurr - Secret chats, silly emojis, total privacy!"
      icons={[
        "i-lucide-party-popper",
        "i-lucide-message-circle",
        "i-lucide-key",
        "i-lucide-brick-wall-fire",
        "i-lucide-users-round",
        "i-lucide-ghost",
        "i-lucide-square-asterisk",
        "i-lucide-paw-print",
      ]}
    />
    <AdsLink
      backgroundColor="#2BCC5A90"
      description="‚Äî MarketMate: Data-driven, integrated supply chain for Ghana's local food system."
      icons={[
        "i-lucide-apple",
        "i-lucide-salad",
        "i-lucide-shopping-bag",
        "i-lucide-handshake",
        "i-lucide-laugh",
      ]}
      url="https://getmarketmate.com"
      textColor="#364153"
    />

    <section class="mt-12 mb-4">
      <div class="rounded-2xl border border-zinc-200 bg-white/70 backdrop-blur-2xl p-5 flex items-center justify-between gap-4">
        <div>
          <h3 class="font-semibold">Let's build or talk.</h3>
          <p class="text-sm text-gray-600 mt-1">Have an idea or feedback? I'd love to hear it.</p>
        </div>
        <a href="/contact" class="px-4 py-2 rounded-full border border-zinc-300 bg-white text-sm font-semibold hover:bg-white/80">Contact</a>
      </div>
    </section>
  </div>
</Layout>
<Footer />
<script>
  const greetings = [
    "Akwaaba!",
    "„Åì„Çì„Å´„Å°„ÅØ",
    "ÏïàÎÖïÌïòÏÑ∏Ïöî",
    "‰Ω†Â•Ω",
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!",
    "„ÅÑ„Çâ„Å£„Åó„ÇÉ„ÅÑ„Åæ„Åõ",
  ];

  // Function to fade out, change text, then fade in
  function changeGreeting() {
    const el = document.getElementById("greeting");
    if (el) {
      el.classList.add("fade");
      setTimeout(() => {
        el.textContent =
          greetings[Math.floor(Math.random() * greetings.length)];
        el.classList.remove("fade");
      }, 500); // Fade-out duration reduced for snappier UX
    }
  }

  // Change greeting every 10 seconds
  setInterval(changeGreeting, 10000);
</script>
