---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { PAYSTACK_PUBLIC_KEY } from "../consts";
---

<Layout title="Wishlist">
  <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 mt-8">
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script src="https://js.paystack.co/v1/inline.js" defer></script>
    <Header />
    <h1 class="text-3xl md:text-4xl font-bold mb-1">Birthday Wishlist</h1>
    <div class="rounded-xl border border-zinc-200 bg-white/60 backdrop-blur-2xl p-4">
      <p class="text-sm text-gray-700 leading-relaxed">
        A simple place for friends and family to make my birthday easier (and more thoughtful).
        If you want to get me something, here are a few ideas. No pressure—messages and small moments count too.
      </p>
    </div>

    <div class="mt-4 flex items-center justify-between text-[13px]">
      <div class="text-gray-600">If you're here — thank you. Small gestures mean a lot.</div>
      <div x-data="{ copied: false, copy(){ navigator.clipboard && navigator.clipboard.writeText(window.location.href).then(()=>{ this.copied=true; setTimeout(()=>this.copied=false, 1400); }); } }" class="w-full sm:w-auto sm:flex sm:justify-end">
        <button @click="copy()" class="w-full sm:w-auto px-4 py-2 rounded-md border border-zinc-300 bg-white/90 font-semibold hover:bg-white transition-colors">
          <span x-show="!copied">Copy wishlist link</span>
          <span x-show="copied">Link copied ✓</span>
        </button>
      </div>
    </div>

    <div class="mt-6 grid gap-4">
      <div class="rounded-xl border border-zinc-50 bg-white/30 backdrop-blur-2xl p-3" x-data="{ open: false }">
        <div class="flex items-center justify-between gap-2">
          <div class="text-[13px] text-gray-700">Would you use something like this?</div>
          <button @click="open = !open" class="text-[13px] underline decoration-dashed underline-offset-4 hover:text-indigo-600">I'm interested</button>
        </div>
        <div x-show="open" class="mt-2">
          <form name="wishlist-interest" method="POST" data-netlify="true" netlify-honeypot="bot-field" action="/wishlist" class="flex flex-col sm:flex-row sm:items-center gap-2">
            <input type="hidden" name="form-name" value="wishlist-interest" />
            <input type="text" name="bot-field" class="hidden" tabindex="-1" autocomplete="off" />
            <input required name="email" type="email" placeholder="you@example.com" class="px-3 py-1.5 text-sm rounded-md border border-zinc-300 bg-white/80 focus:outline-none focus:ring-2 focus:ring-indigo-400" />
            <button type="submit" class="px-3 py-1.5 text-sm rounded-md border border-zinc-300 bg-white/80 font-semibold hover:bg-white transition-colors">Send</button>
            <div class="text-[12px] text-gray-500">Just to keep you posted. No spam.</div>
          </form>
          {Astro.url.searchParams.get('success') === '1' && (
            <div class="mt-2 text-[12px] text-emerald-700">Thanks — noted. I’ll keep you posted.</div>
          )}
        </div>
      </div>
      <div class="rounded-xl border border-zinc-200 bg-white/70 p-4">
        <h2 class="font-semibold">How it works</h2>
        <ul class="mt-2 text-sm text-gray-700 space-y-2">
          <li class="flex gap-2"><span class="text-gray-400">•</span><span>Pick something you like from the list</span></li>
          <li class="flex gap-2"><span class="text-gray-400">•</span><span>Contribute to a group gift or choose a small item</span></li>
          <li class="flex gap-2"><span class="text-gray-400">•</span><span>Or pledge a support gift (meal, help, a note)</span></li>
        </ul>
      </div>

      <div class="h-px bg-gradient-to-r from-transparent via-zinc-200 to-transparent"></div>

      <div class="rounded-xl border border-zinc-200 bg-white/70 p-4">
        <h2 class="font-semibold">Group gifts</h2>
        <p class="mt-2 text-sm text-gray-600">Chip in on a big item. Swipe to choose.</p>
        <div x-data="{ index: 0, items: [
              { title: 'New laptop', goal: 'GHS 7,000', image: '' },
              { title: 'Mobile device', goal: 'GHS 3,000', image: '' }
            ], dragX: 0, dragging: false, startX: 0, hint: true,
            next(){ if(this.index < this.items.length - 1) { this.index++; this.resetDrag(); } },
            prev(){ if(this.index > 0) { this.index--; this.resetDrag(); } },
            resetDrag(){ this.dragX = 0; this.dragging = false; this.startX = 0; },
            onDown(e){ this.dragging = true; this.startX = (e.touches ? e.touches[0].clientX : e.clientX); },
            onMove(e){ if(!this.dragging) return; const x = (e.touches ? e.touches[0].clientX : e.clientX); this.dragX = x - this.startX; },
            onUp(){ if(!this.dragging) return; const threshold = 80; if(this.dragX > threshold) { this.prev(); } else if(this.dragX < -threshold) { this.next(); } this.resetDrag(); this.hint = false; }
          }" x-init="setTimeout(() => { hint = false }, 2400)" class="relative mt-3" @keydown.window.arrow-right.prevent="next()" @keydown.window.arrow-left.prevent="prev()">
          <div class="h-[380px] sm:h-[360px] relative select-none">
              <template x-for="(item, i) in items" :key="item.title">
                <div class="absolute inset-0 will-change-transform transition-transform"
                     :style="'transform: translateY(' + (Math.max(0, i - index) * 12) + 'px) scale(' + (1 - Math.max(0, i - index) * 0.045) + ') translateX(' + (i === index ? dragX : 0) + 'px) rotate(' + (i === index ? (dragX/30) : 0) + 'deg); z-index: ' + (200 - i) + '; opacity: ' + (i < index ? 0 : 1) + ';'">
                  <div class="rounded-xl border border-zinc-200 bg-gradient-to-b from-white to-zinc-50/70 backdrop-blur p-4 shadow-sm h-full flex flex-col"
                       :class="i === index ? 'ring-1 ring-indigo-200 shadow-md' : ''"
                       @pointerdown="onDown($event)" @pointermove.passive="onMove($event)" @pointerup="onUp()" @pointercancel="onUp()"
                       @touchstart.passive="onDown($event)" @touchmove.passive="onMove($event)" @touchend.passive="onUp()">
                    <div class="flex items-start justify-between">
                      <div class="space-y-0.5">
                        <div class="font-medium" x-text="item.title"></div>
                        <div class="text-xs text-gray-500">Group gift</div>
                      </div>
                      <span class="inline-flex items-center px-2 py-0.5 rounded-full text-[11px] border border-zinc-200 text-zinc-600 bg-white/70" x-text="item.goal"></span>
                    </div>
                    <div class="mt-2 relative overflow-hidden rounded-lg border border-zinc-200 bg-zinc-50">
                      <template x-if="item.image">
                        <img :src="item.image" :alt="item.title + ' image'" loading="lazy" class="w-full h-36 sm:h-40 object-cover" />
                      </template>
                      <template x-if="!item.image">
                        <div class="w-full h-36 sm:h-40 bg-gradient-to-br from-zinc-100 to-zinc-50 flex items-center justify-center text-[12px] text-zinc-500">
                          Add image
                        </div>
                      </template>
                      <div class="pointer-events-none absolute inset-0 bg-gradient-to-t from-white/30 via-transparent to-transparent"></div>
                      <div x-show="hint && i === index" class="pointer-events-none absolute top-2 right-2 text-[11px] px-2 py-0.5 rounded-full bg-white/80 border border-zinc-200 text-zinc-600">Swipe →</div>
                    </div>
                    <div class="mt-2 h-2 w-full bg-zinc-100 rounded-full overflow-hidden">
                      <div class="h-full w-0 bg-indigo-500 transition-all"></div>
                    </div>
                    <div class="mt-3 flex flex-wrap items-center gap-2 gap-y-2 text-sm" x-data="{ amount: '', email: '', loading: false, error: '', success: '', setPreset(v){ this.amount = String(v) }, valid(){ return this.email && /.+@.+\\..+/.test(this.email) && Number(this.amount) >= 1 }, pay(){ if(!this.valid()){ this.error='Enter a valid email and amount (≥ 1)'; this.success=''; return; } this.error=''; this.loading=true; try { window.PaystackPop && window.PaystackPop.setup({ key: PAYSTACK_PUBLIC_KEY, email: this.email, amount: Math.round(Number(this.amount) * 100), currency: 'GHS', metadata: { purpose: 'Group gift: ' + item.title }, callback: () => { this.success='Thanks for contributing!'; this.loading=false; this.amount=''; }, onClose: () => { this.loading=false; } }).openIframe(); } catch (e) { this.error='Payment failed to initialize. Please try again.'; this.loading=false; } } }">
                      <input x-model="email" type="email" inputmode="email" placeholder="you@example.com" aria-label="Your email" class="px-2 py-1 rounded-md border border-zinc-300 bg-white/90 focus:outline-none focus:ring-2 focus:ring-indigo-400 w-full sm:w-auto" :class="error && !/.+@.+\\..+/.test(email) ? 'border-rose-300' : ''" />
                      <div class="relative w-full sm:w-auto">
                        <input x-model="amount" type="number" min="1" step="1" placeholder="Amount" aria-label="Amount in GHS" class="pr-12 px-2 py-1 rounded-md border border-zinc-300 bg-white/90 w-full sm:w-36 focus:outline-none focus:ring-2 focus:ring-indigo-400" :class="error && Number(amount) < 1 ? 'border-rose-300' : ''" />
                        <span class="absolute right-2 top-1/2 -translate-y-1/2 text-xs text-gray-500">GHS</span>
                      </div>
                      <div class="flex flex-wrap items-center gap-1 w-full sm:w-auto">
                        <button type="button" @click="setPreset(50)" class="px-2 py-1 rounded-md border border-zinc-200 text-[12px] hover:bg-white">GHS 50</button>
                        <button type="button" @click="setPreset(100)" class="px-2 py-1 rounded-md border border-zinc-200 text-[12px] hover:bg-white">GHS 100</button>
                        <button type="button" @click="setPreset(200)" class="px-2 py-1 rounded-md border border-zinc-200 text-[12px] hover:bg-white">GHS 200</button>
                      </div>
                      <button @click="pay()" :disabled="!valid() || loading" class="underline decoration-dashed underline-offset-4 hover:text-indigo-600 disabled:opacity-60 disabled:cursor-not-allowed w-full sm:w-auto">Contribute</button>
                      <div class="w-full">
                        <div class="text-[12px] text-gray-500">Your email is for the receipt only.</div>
                        <template x-if="error">
                          <div class="text-[12px] text-rose-600 mt-1" x-text="error" aria-live="polite"></div>
                        </template>
                        <template x-if="success">
                          <div class="text-[12px] text-emerald-700 mt-1" x-text="success" aria-live="polite"></div>
                        </template>
                      </div>
                    </div>
                    <div class="mt-auto flex justify-between pt-3">
                      <button @click="prev()" :disabled="index === 0" aria-label="Previous" class="px-3 py-1.5 text-[13px] rounded-md border border-zinc-200 bg-white/80 hover:bg-white disabled:opacity-50">←</button>
                      <button @click="next()" :disabled="index >= items.length - 1" aria-label="Next" class="px-3 py-1.5 text-[13px] rounded-md border border-zinc-200 bg-white/80 hover:bg-white disabled:opacity-50">→</button>
                    </div>
                  </div>
                </div>
              </template>
          </div>
          <div class="mt-3 flex items-center justify-center gap-2">
              <template x-for="(item, i) in items" :key="'dot-' + i">
                <button @click="index = i" :aria-label="'Go to ' + item.title" class="h-1.5 rounded-full transition-all"
                        :class="i === index ? 'w-6 bg-indigo-500' : 'w-2 bg-zinc-300'"></button>
              </template>
          </div>
        </div>
      </div>

      <div class="h-px bg-gradient-to-r from-transparent via-zinc-200 to-transparent"></div>

      <div class="rounded-xl border border-zinc-200 bg-white/70 p-4">
        <h2 class="font-semibold">Items</h2>
        <p class="mt-2 text-sm text-gray-600">Simple picks I use or would genuinely enjoy. If you grab one, a short note would be lovely.</p>
        <div class="mt-3 space-y-2 text-sm">
          <div class="flex items-start justify-between gap-3 rounded-lg border border-zinc-200 p-3 bg-white/80">
            <div>
              <div class="font-medium">Laptop desk</div>
              <div class="text-xs text-gray-500">Adjustable, portable</div>
            </div>
            <div class="flex items-center gap-3">
              <a href="mailto:gideonad.codez@gmail.com?subject=Reserve%3A%20Laptop%20desk&body=Hey%20Gideon%2C%0D%0A%0D%0AI%27ll%20grab%20this.%20Planning%20to%20order%20by%20____.%0D%0A(Optional)%20Short%20note%3A%20___" class="underline decoration-dashed underline-offset-4 hover:text-indigo-600">Reserve</a>
              <span class="text-gray-300">•</span>
              <a href="mailto:gideonad.codez@gmail.com?subject=Purchased%3A%20Laptop%20desk&body=Got%20it%E2%80%94arrives%20around%20____.%0D%0A(Optional)%20Short%20note%3A%20___" class="underline decoration-dashed underline-offset-4 hover:text-indigo-600">Mark purchased</a>
            </div>
          </div>
        </div>
      </div>

      <div class="h-px bg-gradient-to-r from-transparent via-zinc-200 to-transparent"></div>

      <div class="rounded-xl border border-zinc-200 bg-white/70 p-4">
        <h2 class="font-semibold">Support gifts</h2>
        <p class="mt-2 text-sm text-gray-600">Non‑material gifts that matter just as much. If you pledge one, feel free to suggest a day that works.</p>
        <ul class="mt-3 text-sm text-gray-700 space-y-2">
          <li class="flex items-start gap-2"><span class="text-gray-400">•</span><span>Home-cooked meal night</span></li>
          <li class="flex items-start gap-2"><span class="text-gray-400">•</span><span>Help with a weekend errand</span></li>
          <li class="flex items-start gap-2"><span class="text-gray-400">•</span><span>A short note or card</span></li>
        </ul>
        <div class="mt-3 text-sm">
          <a href="mailto:gideonad.codez@gmail.com?subject=Support%20gift%20pledge&body=Hey%20Gideon%2C%0D%0A%0D%0AI%E2%80%99d%20love%20to%20help%20with%20___%20around%20____.%0D%0A(Optional)%20Short%20note%3A%20___" class="underline decoration-dashed underline-offset-4 hover:text-indigo-600">Pledge a support gift</a>
        </div>
      </div>

      <div class="rounded-xl border border-zinc-200 bg-white/70 p-4">
        <h2 class="font-semibold">Cash fund</h2>
        <p class="mt-2 text-sm text-gray-600">If you'd rather, a small general contribution is always appreciated.</p>
        <div class="mt-3 flex flex-wrap items-center gap-2 gap-y-2 text-sm" x-data="{ email: '', amount: '', loading: false, error: '', success: '', setPreset(v){ this.amount = String(v) }, valid(){ return this.email && /.+@.+\..+/.test(this.email) && Number(this.amount) >= 1 }, pay(){ if(!this.valid()){ this.error='Enter a valid email and amount (≥ 1)'; this.success=''; return; } this.error=''; this.loading=true; try { window.PaystackPop && window.PaystackPop.setup({ key: PAYSTACK_PUBLIC_KEY, email: this.email, amount: Math.round(Number(this.amount) * 100), currency: 'GHS', metadata: { purpose: 'Cash fund' }, callback: () => { this.success='Thanks for contributing!'; this.loading=false; this.amount=''; }, onClose: () => { this.loading=false; } }).openIframe(); } catch (e) { this.error='Payment failed to initialize. Please try again.'; this.loading=false; } } }">
          <input x-model="email" type="email" inputmode="email" placeholder="you@example.com" aria-label="Your email" class="px-2 py-1 rounded-md border border-zinc-300 bg-white/90 focus:outline-none focus:ring-2 focus:ring-indigo-400 w-full sm:w-auto" :class="error && !/.+@.+\..+/.test(email) ? 'border-rose-300' : ''" />
          <div class="relative w-full sm:w-auto">
            <input x-model="amount" type="number" min="1" step="1" placeholder="Amount" aria-label="Amount in GHS" class="pr-12 px-2 py-1 rounded-md border border-zinc-300 bg-white/90 w-full sm:w-36 focus:outline-none focus:ring-2 focus:ring-indigo-400" :class="error && Number(amount) < 1 ? 'border-rose-300' : ''" />
            <span class="absolute right-2 top-1/2 -translate-y-1/2 text-xs text-gray-500">GHS</span>
          </div>
          <div class="flex flex-wrap items-center gap-1 w-full sm:w-auto">
            <button type="button" @click="setPreset(20)" class="px-2 py-1 rounded-md border border-zinc-200 text-[12px] hover:bg-white">GHS 20</button>
            <button type="button" @click="setPreset(50)" class="px-2 py-1 rounded-md border border-zinc-200 text-[12px] hover:bg-white">GHS 50</button>
            <button type="button" @click="setPreset(100)" class="px-2 py-1 rounded-md border border-zinc-200 text-[12px] hover:bg-white">GHS 100</button>
          </div>
          <button @click="pay()" :disabled="!valid() || loading" class="inline-flex items-center justify-center px-3 py-2 rounded-md border border-zinc-300 bg-white/90 hover:bg-white disabled:opacity-60 disabled:cursor-not-allowed transition-colors w-full sm:w-auto">Contribute</button>
          <div class="w-full">
            <div class="text-[12px] text-gray-500">Your email is for the receipt only.</div>
            <template x-if="error">
              <div class="text-[12px] text-rose-600 mt-1" x-text="error" aria-live="polite"></div>
            </template>
            <template x-if="success">
              <div class="text-[12px] text-emerald-700 mt-1" x-text="success" aria-live="polite"></div>
            </template>
          </div>
        </div>
      </div>
    </div>
  </div>
  <Footer />
</Layout>


